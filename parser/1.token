TOKEN: int
TOKEN: pow
TOKEN: (
TOKEN: int
TOKEN: a
TOKEN: ,
TOKEN: int
TOKEN: b
TOKEN: )
TOKEN: {
TOKEN: int
TOKEN: x
TOKEN: =
TOKEN: 1
TOKEN: ,
TOKEN: y
TOKEN: =
TOKEN: a
TOKEN: ;
TOKEN: break
TOKEN: ;
TOKEN: while
TOKEN: (
TOKEN: b
TOKEN: >
TOKEN: 0
TOKEN: )
TOKEN: {
TOKEN: if
TOKEN: (
TOKEN: b
TOKEN: %
TOKEN: 2
TOKEN: ==
TOKEN: 1
TOKEN: )
TOKEN: {
TOKEN: x
TOKEN: =
TOKEN: x
TOKEN: *
TOKEN: y
TOKEN: ;
TOKEN: }
TOKEN: y
TOKEN: =
TOKEN: y
TOKEN: *
TOKEN: y
TOKEN: ;
TOKEN: b
TOKEN: =
TOKEN: b
TOKEN: /
TOKEN: 2
TOKEN: ;
TOKEN: }
TOKEN: return
TOKEN: x
TOKEN: ;
TOKEN: }
TOKEN: int
TOKEN: func
TOKEN: (
TOKEN: int
TOKEN: n
TOKEN: ,
TOKEN: int
TOKEN: k
TOKEN: )
TOKEN: {
TOKEN: int
TOKEN: sum
TOKEN: =
TOKEN: 0
TOKEN: ;
TOKEN: for
TOKEN: (
TOKEN: int
TOKEN: i
TOKEN: =
TOKEN: 1
TOKEN: ;
TOKEN: i
TOKEN: <=
TOKEN: n
TOKEN: ;
TOKEN: i
TOKEN: ++
TOKEN: )
TOKEN: {
TOKEN: sum
TOKEN: +=
TOKEN: pow
TOKEN: (
TOKEN: i
TOKEN: ,
TOKEN: k
TOKEN: )
TOKEN: ;
TOKEN: }
TOKEN: }
