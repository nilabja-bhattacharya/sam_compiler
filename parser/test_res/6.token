TOKEN: int
TOKEN: sumofallprime
TOKEN: (
TOKEN: int
TOKEN: x
TOKEN: )
TOKEN: {
TOKEN: int
TOKEN: sum
TOKEN: =
TOKEN: 0
TOKEN: ;
TOKEN: for
TOKEN: (
TOKEN: int
TOKEN: i
TOKEN: =
TOKEN: 2
TOKEN: ;
TOKEN: i
TOKEN: <
TOKEN: x
TOKEN: ;
TOKEN: i
TOKEN: ++
TOKEN: )
TOKEN: {
TOKEN: int
TOKEN: fl
TOKEN: =
TOKEN: 0
TOKEN: ;
TOKEN: for
TOKEN: (
TOKEN: int
TOKEN: j
TOKEN: =
TOKEN: 2
TOKEN: ;
TOKEN: j
TOKEN: *
TOKEN: j
TOKEN: <=
TOKEN: i
TOKEN: ;
TOKEN: j
TOKEN: ++
TOKEN: )
TOKEN: {
TOKEN: if
TOKEN: (
TOKEN: i
TOKEN: %
TOKEN: j
TOKEN: ==
TOKEN: 0
TOKEN: )
TOKEN: {
TOKEN: fl
TOKEN: =
TOKEN: 1
TOKEN: ;
TOKEN: break
TOKEN: ;
TOKEN: }
TOKEN: }
TOKEN: if
TOKEN: (
TOKEN: fl
TOKEN: ==
TOKEN: 0
TOKEN: )
TOKEN: {
TOKEN: sum
TOKEN: =
TOKEN: sum
TOKEN: +
TOKEN: i
TOKEN: ;
TOKEN: }
TOKEN: }
TOKEN: return
TOKEN: sum
TOKEN: ;
TOKEN: }
