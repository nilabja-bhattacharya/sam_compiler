TYPE: INT
TYPE: INT
IDEN: ID
ARGUMENT_LIST -> TYPE IDEN
ARGUMENT_LIST -> ARGUMENT
TYPE: INT
IDEN: ID
EXPR: INT_C
ID_LIST: IDEN '=' EXPR
DECLARATION_LIST: TYPE ID_LIST
STATEMENT -> DECLARATION_LIST
STATEMENT_LIST -> STATEMENT
STATEMENT -> ;
STATEMENT_LIST -> STATEMENT_LIST STATEMENT 
TYPE: INT
IDEN: ID
EXPR: INT_C
ID_LIST: IDEN '=' EXPR
DECLARATION_LIST: TYPE ID_LIST
IDEN: ID
EXPR: IDEN
IDEN: ID
EXPR: IDEN
EXPR: EXPR '<' EXPR
IDEN: ID
INC_DEC:    IDEN INC
STATEMENT -> INC_DEC
TYPE: INT
IDEN: ID
EXPR: INT_C
ID_LIST: IDEN '=' EXPR
DECLARATION_LIST: TYPE ID_LIST
STATEMENT -> DECLARATION_LIST
STATEMENT_LIST -> STATEMENT
STATEMENT -> ;
STATEMENT_LIST -> STATEMENT_LIST STATEMENT 
TYPE: INT
IDEN: ID
EXPR: INT_C
ID_LIST: IDEN '=' EXPR
DECLARATION_LIST: TYPE ID_LIST
IDEN: ID
EXPR: IDEN
IDEN: ID
EXPR: IDEN
EXPR: EXPR '*' EXPR
IDEN: ID
EXPR: IDEN
EXPR: EXPR LEQ EXPR
IDEN: ID
INC_DEC:    IDEN INC
STATEMENT -> INC_DEC
IDEN: ID
EXPR: IDEN
IDEN: ID
EXPR: IDEN
EXPR: EXPR '%' EXPR
EXPR: INT_C
EXPR: EXPR EQ EXPR
IDEN: ID
OP: '='
EXPR: INT_C
STATEMENT -> IDEN OP EXPR
STATEMENT_LIST -> STATEMENT
STATEMENT -> ;
STATEMENT_LIST -> STATEMENT_LIST STATEMENT 
STATEMENT -> BREAK
STATEMENT_LIST -> STATEMENT_LIST STATEMENT 
STATEMENT -> ;
STATEMENT_LIST -> STATEMENT_LIST STATEMENT 
SCOPE: '{' STATEMENT_LIST '}'
IF '(' EXPR ')' SCOPE
STATEMENT -> IF_BLOCK
STATEMENT_LIST -> STATEMENT
SCOPE: '{' STATEMENT_LIST '}'
FOR_BLOCK: FOR '(' DECLARATION_LIST ';' EXPR ';' STATEMENT ')' SCOPE
STATEMENT -> FOR_BLOCK
STATEMENT_LIST -> STATEMENT_LIST STATEMENT 
IDEN: ID
EXPR: IDEN
EXPR: INT_C
EXPR: EXPR EQ EXPR
IDEN: ID
OP: '='
IDEN: ID
EXPR: IDEN
IDEN: ID
EXPR: IDEN
EXPR: EXPR '+' EXPR
STATEMENT -> IDEN OP EXPR
STATEMENT_LIST -> STATEMENT
STATEMENT -> ;
STATEMENT_LIST -> STATEMENT_LIST STATEMENT 
SCOPE: '{' STATEMENT_LIST '}'
IF '(' EXPR ')' SCOPE
STATEMENT -> IF_BLOCK
STATEMENT_LIST -> STATEMENT_LIST STATEMENT 
SCOPE: '{' STATEMENT_LIST '}'
FOR_BLOCK: FOR '(' DECLARATION_LIST ';' EXPR ';' STATEMENT ')' SCOPE
STATEMENT -> FOR_BLOCK
STATEMENT_LIST -> STATEMENT_LIST STATEMENT 
IDEN: ID
EXPR: IDEN
STATEMENT -> RETURN EXPR
STATEMENT_LIST -> STATEMENT_LIST STATEMENT 
STATEMENT -> ;
STATEMENT_LIST -> STATEMENT_LIST STATEMENT 
SCOPE: '{' STATEMENT_LIST '}'
FUNCTION
FUNCTION_LIST -> FUNCTION
PROGRAM -> FUNCTION_LIST
